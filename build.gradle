buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.laboratorykkoon9'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:1.4.200' // embedded database 사용

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.33'

    // jwt
    implementation 'com.auth0:java-jwt:4.0.0'

    // bcrypt
    implementation 'org.mindrot:jbcrypt:0.4'


    // spring security
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

    // Querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

/* 1-1. querydsl에서 사용할 경로 지정*/
def querydslDir = "$buildDir/generated/querydsl"
/* 1-2. JPA사용 여부와 사용할 경로를 지정*/
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
    library = "com.querydsl:querydsl-apt:"
}
/* 1-3. build시 사용할 SourceSet 추가 */
sourceSets {
    main.java.srcDir querydslDir
}
/* 1-4. querydsl이 complieClasspath를 상속하도록 설정 */
configurations {
    querydsl.extendsFrom compileClasspath
}
/* 1-5. querydsl 컴파일시 사용할 옵션 설정 */
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
